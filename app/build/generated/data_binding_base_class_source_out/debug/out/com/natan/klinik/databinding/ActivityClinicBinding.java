// Generated by view binder compiler. Do not edit!
package com.natan.klinik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.natan.klinik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityClinicBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView icAddress;

  @NonNull
  public final ImageView icPhone;

  @NonNull
  public final ImageView icSchedule;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvClinicAddress;

  @NonNull
  public final TextView tvClinicName;

  @NonNull
  public final TextView tvClinicPhone;

  @NonNull
  public final TextView tvClinicSchedule;

  private ActivityClinicBinding(@NonNull LinearLayout rootView, @NonNull ImageView icAddress,
      @NonNull ImageView icPhone, @NonNull ImageView icSchedule, @NonNull Toolbar toolbar,
      @NonNull TextView tvClinicAddress, @NonNull TextView tvClinicName,
      @NonNull TextView tvClinicPhone, @NonNull TextView tvClinicSchedule) {
    this.rootView = rootView;
    this.icAddress = icAddress;
    this.icPhone = icPhone;
    this.icSchedule = icSchedule;
    this.toolbar = toolbar;
    this.tvClinicAddress = tvClinicAddress;
    this.tvClinicName = tvClinicName;
    this.tvClinicPhone = tvClinicPhone;
    this.tvClinicSchedule = tvClinicSchedule;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityClinicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityClinicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_clinic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityClinicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.icAddress;
      ImageView icAddress = ViewBindings.findChildViewById(rootView, id);
      if (icAddress == null) {
        break missingId;
      }

      id = R.id.icPhone;
      ImageView icPhone = ViewBindings.findChildViewById(rootView, id);
      if (icPhone == null) {
        break missingId;
      }

      id = R.id.icSchedule;
      ImageView icSchedule = ViewBindings.findChildViewById(rootView, id);
      if (icSchedule == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvClinicAddress;
      TextView tvClinicAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvClinicAddress == null) {
        break missingId;
      }

      id = R.id.tvClinicName;
      TextView tvClinicName = ViewBindings.findChildViewById(rootView, id);
      if (tvClinicName == null) {
        break missingId;
      }

      id = R.id.tvClinicPhone;
      TextView tvClinicPhone = ViewBindings.findChildViewById(rootView, id);
      if (tvClinicPhone == null) {
        break missingId;
      }

      id = R.id.tvClinicSchedule;
      TextView tvClinicSchedule = ViewBindings.findChildViewById(rootView, id);
      if (tvClinicSchedule == null) {
        break missingId;
      }

      return new ActivityClinicBinding((LinearLayout) rootView, icAddress, icPhone, icSchedule,
          toolbar, tvClinicAddress, tvClinicName, tvClinicPhone, tvClinicSchedule);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
