// Generated by view binder compiler. Do not edit!
package com.natan.klinik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.natan.klinik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListHotelBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView arrow;

  @NonNull
  public final ImageView imgHotel;

  @NonNull
  public final RelativeLayout rlHotel;

  @NonNull
  public final RelativeLayout rlListHotel;

  @NonNull
  public final TextView tvJarak;

  @NonNull
  public final TextView tvNamaHotel;

  private ItemListHotelBinding(@NonNull RelativeLayout rootView, @NonNull ImageView arrow,
      @NonNull ImageView imgHotel, @NonNull RelativeLayout rlHotel,
      @NonNull RelativeLayout rlListHotel, @NonNull TextView tvJarak,
      @NonNull TextView tvNamaHotel) {
    this.rootView = rootView;
    this.arrow = arrow;
    this.imgHotel = imgHotel;
    this.rlHotel = rlHotel;
    this.rlListHotel = rlListHotel;
    this.tvJarak = tvJarak;
    this.tvNamaHotel = tvNamaHotel;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListHotelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListHotelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_hotel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListHotelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow;
      ImageView arrow = ViewBindings.findChildViewById(rootView, id);
      if (arrow == null) {
        break missingId;
      }

      id = R.id.imgHotel;
      ImageView imgHotel = ViewBindings.findChildViewById(rootView, id);
      if (imgHotel == null) {
        break missingId;
      }

      id = R.id.rlHotel;
      RelativeLayout rlHotel = ViewBindings.findChildViewById(rootView, id);
      if (rlHotel == null) {
        break missingId;
      }

      RelativeLayout rlListHotel = (RelativeLayout) rootView;

      id = R.id.tvJarak;
      TextView tvJarak = ViewBindings.findChildViewById(rootView, id);
      if (tvJarak == null) {
        break missingId;
      }

      id = R.id.tvNamaHotel;
      TextView tvNamaHotel = ViewBindings.findChildViewById(rootView, id);
      if (tvNamaHotel == null) {
        break missingId;
      }

      return new ItemListHotelBinding((RelativeLayout) rootView, arrow, imgHotel, rlHotel,
          rlListHotel, tvJarak, tvNamaHotel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
